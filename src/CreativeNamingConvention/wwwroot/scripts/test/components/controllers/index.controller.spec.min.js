define(["require","exports"],function(e,a){"use strict";describe("Index controller",function(){beforeEach(angular.mock.module("creative.module"));var e,a,t,o,n;beforeEach(inject(function(s,c){a=s,t=c,e={},o={contents:[{message:"Hello World!"}]},n=t("IndexCtrl",{$scope:e,LOBData:o})})),it("should initialize correctly",function(){expect(n).toBeDefined()}),it("has a clearAllFunction method that should create a new instance of model to delete current values from current inputs",function(){n.nameConvForm={$valid:!0,$setPristine:function(){},$setUntouched:function(){}},n.postSuccess=!0,n.model={creativeMessage:"fake message",campaignName:"fake Campaign"},spyOn(n.nameConvForm,"$setPristine"),spyOn(n.nameConvForm,"$setUntouched"),n.clearAllValues(),console.log(n.model),expect(n.nameConvForm.$setPristine).toHaveBeenCalled(),expect(n.nameConvForm.$setUntouched).toHaveBeenCalled(),expect(n.postSuccess).toBeFalsy()}),it("has a addNameConv method that should PREVENT a postCreativeName method execution when form IS *IN*VALID",function(){n.nameConvForm={$valid:!1},n.postSuccess=!1,n.model={getCreativeName:function(){},creativeMessage:"TEST MESSAGE",campaignName:"TEST CAMPAIGN"},n.CreativeService={postCreativeName:function(){}},spyOn(n.CreativeService,"postCreativeName").and.returnValue("success"),n.addNameConv(),expect(n.postSuccess).toBeFalsy,expect(n.model.creativeMessage).toEqual("TEST MESSAGE"),expect(n.model.campaignName).toEqual("TEST CAMPAIGN")}),it("has a addNameConv method that should send a postCreativeName method when form IS VALID",function(){n.nameConvForm={$valid:!0},n.postSuccess=!1,n.model={getCreativeName:function(){},creativeMessage:"TEST MESSAGE",campaignName:"TEST CAMPAIGN"},n.postSuccess=!1,n.addNameConv(),spyOn(n.CreativeService,"postCreativeName").and.returnValue(n.postSuccess=!0).and.returnValue(n.model.creativeMessage=null).and.returnValue(n.model.campaignName=null),expect(n.postSuccess).toEqual(!0),expect(n.model.creativeMessage).toEqual(null),expect(n.model.campaignName).toEqual(null)})})});